library IEEE;
use IEEE.std_logic_1164.all;

-- Módulo de controle criado conforme solicitado.
-- Gera sinais de controle baseados no opcode da instrução[cite: 49].
entity controle is
    port (
        i_OPCODE    : in  std_logic_vector(6 downto 0);
        o_ALU_SRC   : out std_logic; -- Controla o MUX da entrada B da ULA[cite: 81].
        o_MEM2REG   : out std_logic; -- Controla o MUX de escrita no banco de registradores[cite: 57, 71].
        o_REG_WRITE : out std_logic; -- Habilita a escrita no banco de registradores[cite: 71].
        o_MEM_READ  : out std_logic; -- Habilita a leitura da memória de dados[cite: 71].
        o_MEM_WRITE : out std_logic; -- Habilita a escrita na memória de dados[cite: 71].
        o_ALUOP     : out std_logic_vector(1 downto 0) -- Auxilia na seleção da operação da ULA[cite: 51, 72, 73].
    );
end controle;

architecture arch_1 of controle is
begin
    process(i_OPCODE)
    begin
        -- Define valores padrão para evitar a criação de latches.
        o_ALU_SRC   <= '0';
        o_MEM2REG   <= '0';
        o_REG_WRITE <= '0';
        o_MEM_READ  <= '0';
        o_MEM_WRITE <= '0';
        o_ALUOP     <= "00";

        case i_OPCODE is
            -- Instruções Tipo-R (add, sub, xor, etc.)
            when "0110011" =>
                o_REG_WRITE <= '1';
                o_ALU_SRC   <= '0';
                o_ALUOP     <= "00";

            -- Instruções Tipo-I (addi, etc.)
            when "0010011" =>
                o_REG_WRITE <= '1';
                o_ALU_SRC   <= '1';
                o_ALUOP     <= "10";

            -- Instrução LW (Load Word)
            when "0000011" =>
                o_REG_WRITE <= '1';
                o_ALU_SRC   <= '1';
                o_MEM_READ  <= '1';
                o_MEM2REG   <= '1';
                o_ALUOP     <= "11";

            -- Instrução SW (Store Word)
            when "0100011" =>
                o_ALU_SRC   <= '1';
                o_MEM_WRITE <= '1';
                -- o_REG_WRITE permanece '0'

            -- Outros casos
            when others =>
                -- Mantém os sinais padrão (tudo desabilitado).
        end case;
    end process;
end arch_1;